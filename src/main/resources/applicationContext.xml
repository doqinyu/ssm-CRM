<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"

	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:tx="http://www.springframework.org/schema/tx"  
    xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd 
    					http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd 
    					http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd 
    					http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
    					http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
    ">
    
  <!-- 读取jdbc.properties -->
  <context:property-placeholder location="classpath:jdbc.properties"/>
  
  <!-- 创建DataSource -->
  <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
  	<property name="driverClassName" value="${jdbc.driverClass}"></property>
  	<property name="url" value="${jdbc.url}"></property>
  	<property name="username" value="${jdbc.user}"></property>
  	<property name="password" value="${jdbc.password}"></property>
  	<property name="maxIdle" value="5"/>
  </bean>
  
  
  <!-- 创建SqlSessionFactory -->
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
  	<!-- 关联连接池 -->
  	<property name="dataSource" ref="dataSource"></property>
  	<!-- 加载sql映射文件 -->
  	<property name="mapperLocations" value="classpath:com/dao/*.xml"></property>
 	<!-- 引入插件 -->
 	<property name="plugins">
 		<array>
 			<!-- mybatis分页插件 -->
 			<bean class="com.github.pagehelper.PageInterceptor">
 				<property name="properties">
 					<!-- helperDialect:连接数据库的类型 -->
 					<value>helperDialect=mysql</value>
 				</property>
 			</bean>
 		</array>
 	</property>
  </bean>
  
  <!-- mapper接口扫描 
  
  注意：如果使用Mapper接口包扫描，那么每个Mapper接口在Spring容器中的id名称为类名
  例如：接口CustomerMapper->customerMapper
 
  -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 配置Mapper接口所在包的路径 -->
		<property name="basePackage" value="com.dao"></property>
	</bean>
	
	
	
	<!-- 开启Spring IOC 注解扫描 -->
	<!-- 由于base-package必须要有值，且该值不能为org(与spring自带注解区分)，因此必须新建一个com包，再在com下新建mapper pojo等包 -->
	<context:component-scan base-package="com"></context:component-scan>
	
	
	<!-- 开启Spring的事务 -->
	<!-- 事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 启动Spring事务注解 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
</beans>